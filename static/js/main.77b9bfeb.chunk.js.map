{"version":3,"sources":["utils/storeApi.js","components/List/Title.js","components/Card.js","components/Input/InputCard.js","components/Input/InputContainer.js","components/List/List.js","utils/store.js","components/TopBar.js","components/Filter.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","useStyle","makeStyles","theme","editableTitleContainer","margin","spacing","display","editableTitle","flexGrow","fontSize","fontWeight","input","background","Title","title","listId","useState","open","setOpen","newTitle","setNewTitle","updateListTitle","useContext","storeApi","classes","InputBase","onChange","e","target","value","autoFocus","inputProps","className","fullWidth","onBlur","Typography","onClick","card","padding","Card","index","draggableId","id","provided","ref","innerRef","dragHandleProps","draggableProps","Paper","width","paddingBottom","btnConfirm","color","fade","confirm","InputCard","type","addMoreCard","addMoreList","setTitle","multiline","placeholder","Button","IconButton","root","marginTop","addCard","backgroundColor","InputContainer","Collapse","in","elevation","minWidth","marginLeft","cardContainer","List","list","CssBaseline","droppableId","droppableProps","cards","map","key","data","lists","listIds","alignItems","btn","TopBar","drawerPaper","titleContainer","justifyContent","marginBottom","menuContainer","flexWrap","Filter","filterUpdated","filters","setFilter","statuses","setStatus","useEffect","listStatus","Object","keys","filterChange","Drawer","onClose","anchor","paper","Divider","TextField","style","name","label","FormControl","InputLabel","Select","status","MenuItem","minHeight","overflowY","listContainer","App","store","setData","filteredData","setFilteredData","filter","items","item","toLowerCase","includes","updatedData","reduce","acc","Provider","console","log","newCard","uuid","newState","newListId","newList","onDragEnd","result","destination","source","newListIds","splice","sourceList","destinationList","draggingCard","newSate","direction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77b9bfeb.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);\n","import React, { useState, useContext } from 'react';\nimport { Typography, InputBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport storeApi from '../../utils/storeApi';\n\nconst useStyle = makeStyles((theme) => ({\n  editableTitleContainer: {\n    margin: theme.spacing(1),\n    display: 'flex',\n  },\n  editableTitle: {\n    flexGrow: 1,\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n  },\n  input: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    margin: theme.spacing(1),\n    '&:focus': {\n      background: '#ddd',\n    },\n  },\n}));\nexport default function Title({ title, listId }) {\n  const [open, setOpen] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n  const { updateListTitle } = useContext(storeApi);\n  const classes = useStyle();\n  const handleOnChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n\n  const handleOnBlur = () => {\n    updateListTitle(newTitle, listId);\n    setOpen(false);\n  };\n  return (\n    <div>\n      {open ? (\n        <div>\n          <InputBase\n            onChange={handleOnChange}\n            autoFocus\n            value={newTitle}\n            inputProps={{\n              className: classes.input,\n            }}\n            fullWidth\n            onBlur={handleOnBlur}\n          />\n        </div>\n      ) : (\n        <div className={classes.editableTitleContainer}>\n          <Typography\n            onClick={() => setOpen(!open)}\n            className={classes.editableTitle}\n          >\n            {title}\n          </Typography>\n          <MoreHorizIcon />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst useStyle = makeStyles((theme) => ({\n  card: {\n    padding: theme.spacing(1, 1, 1, 2),\n    margin: theme.spacing(1),\n  },\n}));\nexport default function Card({ card, index }) {\n  const classes = useStyle();\n\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.dragHandleProps}\n          {...provided.draggableProps}\n        >\n          <Paper className={classes.card}>{card.title}</Paper>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Paper, InputBase, Button, IconButton } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport storeApi from '../../utils/storeApi';\n\nconst useStyle = makeStyles((theme) => ({\n  card: {\n    width: '280px',\n    margin: theme.spacing(0, 1, 1, 1),\n    paddingBottom: theme.spacing(4),\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n  btnConfirm: {\n    background: '#5AAC44',\n    color: '#fff',\n    '&:hover': {\n      background: fade('#5AAC44', 0.75),\n    },\n  },\n  confirm: {\n    margin: theme.spacing(0, 1, 1, 1),\n  },\n}));\nexport default function InputCard({ setOpen, listId, type }) {\n  const classes = useStyle();\n  const { addMoreCard, addMoreList } = useContext(storeApi);\n  const [title, setTitle] = useState('');\n\n  const handleOnChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleBtnConfirm = () => {\n    if (type === 'card') {\n      addMoreCard(title, listId);\n      setTitle('');\n      setOpen(false);\n    } else {\n      addMoreList(title);\n      setTitle('');\n      setOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Paper className={classes.card}>\n          <InputBase\n            onChange={handleOnChange}\n            multiline\n            onBlur={() => setOpen(false)}\n            fullWidth\n            inputProps={{\n              className: classes.input,\n            }}\n            value={title}\n            placeholder={\n              type === 'card'\n                ? 'Enter a title of this card..'\n                : 'Enter list title...'\n            }\n          />\n        </Paper>\n      </div>\n      <div className={classes.confirm}>\n        <Button className={classes.btnConfirm} onClick={handleBtnConfirm}>\n          {type === 'card' ? 'Add Card' : 'Add List'}\n        </Button>\n        <IconButton onClick={() => setOpen(false)}>\n          <ClearIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Paper, Typography, Collapse } from '@material-ui/core';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport InputCard from './InputCard';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    width: '300px',\n    marginTop: theme.spacing(1),\n  },\n  addCard: {\n    padding: theme.spacing(1, 1, 1, 2),\n    margin: theme.spacing(0, 1, 1, 1),\n    background: '#EBECF0',\n    '&:hover': {\n      backgroundColor: fade('#000', 0.25),\n    },\n  },\n}));\n\nexport default function InputContainer({ listId, type }) {\n  const classes = useStyle();\n  const [open, setOpen] = useState(false);\n  return (\n    <div className={classes.root}>\n      <Collapse in={open}>\n        <InputCard setOpen={setOpen} listId={listId} type={type} />\n      </Collapse>\n      <Collapse in={!open}>\n        <Paper\n          className={classes.addCard}\n          elevation={0}\n          onClick={() => setOpen(!open)}\n        >\n          <Typography>\n            {type === 'card' ? '+ Add a Card' : '+ Add another List'}\n          </Typography>\n        </Paper>\n      </Collapse>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Paper, CssBaseline } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport Card from \"../Card\";\nimport InputContainer from \"../Input/InputContainer\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minWidth: \"300px\",\n    backgroundColor: \"#EBECF0\",\n    marginLeft: theme.spacing(1),\n  },\n  cardContainer: {\n    marginTop: theme.spacing(4),\n  },\n}));\nexport default function List({ list, index }) {\n  const classes = useStyle();\n  return (\n    <Draggable draggableId={list.id} index={index}>\n      {(provided) => (\n        <div {...provided.draggableProps} ref={provided.innerRef}>\n          <Paper className={classes.root} {...provided.dragHandleProps}>\n            <CssBaseline />\n            <Title title={list.title} listId={list.id} />\n            <Droppable droppableId={list.id}>\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className={classes.cardContainer}\n                >\n                  {list.cards.map((card, index) => (\n                    <Card key={card.id} card={card} index={index} />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            <InputContainer listId={list.id} type=\"card\" />\n          </Paper>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","const cards = [\n  {\n    id: 'card-1',\n    title: 'Create a Kanban board',\n  },\n  {\n    id: 'card-2',\n    title: 'Add a card',\n  },\n  {\n    id: 'card-3',\n    title: 'Add Drag and Drop',\n  },\n  {\n    id: 'card-4',\n    title: 'Add a list',\n  },\n  {\n    id: 'card-5',\n    title: 'Add a Filters',\n  }\n];\n\nconst data = {\n  lists: {\n    'list-1': {\n      id: 'list-1',\n      title: 'Todo',\n      cards,\n    },\n    'list-2': {\n      id: 'list-2',\n      title: 'In Progress',\n      cards: [],\n    },\n    'list-3': {\n      id: 'list-3',\n      title: 'Done',\n      cards: [],\n    },\n  },\n  listIds: ['list-1', 'list-2','list-3'],\n};\n\nexport default data;\n","import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  btn: {\n    color: '#fff',\n    background: 'hsla(0,0%,100%,.24)',\n  },\n}));\n\nexport default function TopBar({ setOpen }) {\n  const classes = useStyle();\n  return (\n    <div className={classes.root}>\n      <Typography className={classes.title}>Trello Board</Typography>\n      <Button className={classes.btn} onClick={() => setOpen(true)}>\n        Filters\n      </Button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Drawer,\n  Typography,\n  Divider,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nconst useStyle = makeStyles((theme) => ({\n  drawerPaper: {\n    width: \"400px\",\n  },\n  title: {\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n  },\n  titleContainer: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    marginBottom: theme.spacing(2),\n  },\n  menuContainer: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\",\n    margin: theme.spacing(2),\n  },\n}));\nexport default function Filter({\n  setOpen,\n  open,\n  data,\n  filterUpdated,\n  filters,\n  setFilter,\n}) {\n  const classes = useStyle();\n  const [statuses, setStatus] = useState([]);\n\n  useEffect(() => {\n    const listStatus = Object.keys(data.lists).map((key) => data.lists[key]);\n    setStatus(listStatus);\n  }, [data]);\n\n  const filterChange = (value, key) => {\n    setFilter({\n      ...filters,\n      [key]: value,\n    });\n    filterUpdated({\n      ...filters,\n      [key]: value,\n    });\n  };\n  return (\n    <Drawer\n      open={open}\n      onClose={() => setOpen(!open)}\n      anchor=\"right\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.titleContainer}>\n        <Typography className={classes.title}> Filters</Typography>\n        <Clear onClick={() => setOpen(!open)} />\n      </div>\n      <Divider />\n\n      <div className={classes.menuContainer}>\n        <TextField\n          style={{ width: \"100%\" }}\n          value={filters.name}\n          onChange={(e) => filterChange(e.target.value, \"name\")}\n          placeholder=\"Name\"\n          label=\"Name\"\n        />\n\n        <FormControl fullWidth>\n          <InputLabel>Status</InputLabel>\n          <Select\n            value={filters.status}\n            label=\"Status\"\n            onChange={(e) => filterChange(e.target.value, \"status\")}\n          >\n            <MenuItem value=\"\">None</MenuItem>\n            {statuses.map((status) => (\n              <MenuItem key={status.id} value={status.id}>\n                {status.title}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    </Drawer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport List from \"./components/List/List\";\nimport store from \"./utils/store\";\nimport StoreApi from \"./utils/storeApi\";\nimport InputContainer from \"./components/Input/InputContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport TopBar from \"./components/TopBar\";\nimport Filters from \"./components/Filter\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    background: \"rgb(0, 121, 191)\",\n    width: \"100%\",\n    overflowY: \"auto\",\n  },\n  listContainer: {\n    display: \"flex\",\n  },\n}));\n\nexport default function App() {\n  const [data, setData] = useState(store);\n  const [filteredData, setFilteredData] = useState(store);\n  const [open, setOpen] = useState(false);\n  const [filters, setFilter] = useState({\n    name: \"\",\n    status: \"\",\n  });\n\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    console.log(title, listId);\n\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newCard];\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  useEffect(() => {\n    filterUpdated(filters);\n  }, [data]);\n\n  const addMoreList = (title) => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: {\n        ...data.lists,\n        [newListId]: newList,\n      },\n    };\n    setData(newState);\n  };\n\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    if (!destination) {\n      return;\n    }\n    if (type === \"list\") {\n      const newListIds = data.listIds;\n      newListIds.splice(source.index, 1);\n      newListIds.splice(destination.index, 0, draggableId);\n      return;\n    }\n\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(\n      (card) => card.id === draggableId\n    )[0];\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const newSate = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: destinationList,\n        },\n      };\n      setData(newSate);\n    } else {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n\n      const newState = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinationList.id]: destinationList,\n        },\n      };\n      setData(newState);\n    }\n  };\n\n  const filterUpdated = (filter) => {\n    let items = Object.keys(data.lists).map((key) => data.lists[key]);\n    let filterUpdated = items;\n    if (filter.name)\n      filterUpdated = items.map((item) => {\n        const cards = item.cards.filter((card) => {\n          return (\n            card.title.toLowerCase().includes(filter.name.toLowerCase()) &&\n            (filter.status ? filter.status === item.id : true)\n          );\n        });\n        return { ...item, cards };\n      });\n    else if (!filter.name && filter.status)\n      filterUpdated = items.map((item) => {\n        if (item.id !== filter.status) {\n          return { ...item, cards: [] };\n        }\n        return item;\n      });\n\n\n    const updatedData = {\n      ...data,\n      lists: filterUpdated.reduce((acc, item) => {\n        return { ...acc, [item.id]: item };\n      }, {}),\n    };\n    setFilteredData(updatedData);\n  };\n\n  return (\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\n      <div className={classes.root}>\n        <TopBar setOpen={setOpen} />\n\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"app\" type=\"list\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                className={classes.listContainer}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {filteredData.listIds.map((listId, index) => {\n                  const list = filteredData.lists[listId];\n                  return <List list={list} key={listId} index={index} />;\n                })}\n                <InputContainer type=\"list\" />\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <Filters\n          open={open}\n          setOpen={setOpen}\n          data={data}\n          filterUpdated={filterUpdated}\n          filters={filters}\n          setFilter={setFilter}\n        />\n      </div>\n    </StoreApi.Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}